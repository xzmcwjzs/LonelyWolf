<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections.Generic"#>
<#@ import namespace="System.IO"#>
<#@ import namespace="System.Reflection"#>
<#@ import namespace="System.Text" #> 
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
using System;
using System.Collections.Generic;
using System.Configuration;
using System.Linq;
using System.Reflection;  
using System.IO;  
using System.Text;
using System.Threading.Tasks;

namespace MalignantTumorSystem.DAL.DALFactory{

    public partial class AbstractFactory
	{
      <#
            string currentPath =Path.GetDirectoryName(this.Host.TemplateFile);
            string solutionPath = currentPath.Substring(0, currentPath.IndexOf(@"\MalignantTumorSystem.DAL"));
            string txtFilePath= Path.Combine(solutionPath, @"MalignantTumorSystem.Model\ClassNameTxt\ClassName.txt");  
            string[] ClassNameList =new string[]{""};
            using(StreamReader reader=new StreamReader(txtFilePath)){
                 string classNameStr=reader.ReadToEnd();
                 int index=classNameStr.LastIndexOf(',');
	             classNameStr=classNameStr.Substring(0,index);
                 ClassNameList= classNameStr.Split(',');
          }
        #>
     <#
    if(ClassNameList[0]!=""){
        foreach (var className in ClassNameList)
		{#>
	    public static <#=className#>Dal Get<#=className#>Dal()
		    {
		        return Assembly.Load(AssemblyPath).CreateInstance(NameSpacePath + ".<#=className#>Dal") as 

<#=className#>Dal;
		    }
	  <#}
    }#> 
   }
}

