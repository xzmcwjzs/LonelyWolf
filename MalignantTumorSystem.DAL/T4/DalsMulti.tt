<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="T4Toolbox.tt" #>
<#@ include file="DalsTemplate.tt" #>

<#
    //string currentPath = Path.GetDirectoryName(Host.TemplateFile);
    //string projectPath =currentPath.Substring(0, currentPath.IndexOf(@"\T4"));
    //string  dalsPath=Path.Combine(projectPath,"Dals");
    //if(!Directory.Exists(dalsPath))
    //{
        //Directory.CreateDirectory(dalsPath);
    //}
    //string solutionPath = currentPath.Substring(0, currentPath.IndexOf(@"\MalignantTumorSystem.DAL"));
//
    //string modelFile= Path.Combine(solutionPath, @"MalignantTumorSystem.Model\bin\Debug\MalignantTumorSystem.Model.dll");
    //byte[] fileData= File.ReadAllBytes(modelFile);
    //Assembly assembly = Assembly.Load(fileData);
    //Assembly assembly = Assembly.LoadFrom(modelFile);
    //IEnumerable<Type> modelTypes = assembly.GetTypes().Where(m => m.Namespace == "TumorManagementSystem.Model" && !m.IsAbstract);
    //foreach(Type t in modelTypes)
    //{
        //DalsTemplate config = new DalsTemplate(t.Name);
        //string dalName=t.Name+"Dal";
        //string fileName = string.Format(@"{0}\{1}.cs", dalsPath,dalName);
        //config.Output.Encoding = Encoding.UTF8;
        //config.RenderToFile(fileName);
    //}
#>