<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections.Generic"#>
<#@ import namespace="System.IO"#>
<#@ import namespace="System.Reflection"#>
<#@ import namespace="System.Text" #> 
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Data.Entity.ModelConfiguration.Conventions;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using MalignantTumorSystem.Model.Entities;
using MalignantTumorSystem.Model.Mapping;

namespace MalignantTumorSystem.Model.DataBaseContext
{
    public partial class MalignantTumorEntities:DbContext
    {
        public MalignantTumorEntities()
            : base("name=MalignantTumorEntities")
        {
        }
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            modelBuilder.Conventions.Remove<PluralizingTableNameConvention>();
            //注册实体的约定配置规则
<#
       
            string currentPath =Path.GetDirectoryName(this.Host.TemplateFile);
            string solutionPath = currentPath.Substring(0, currentPath.IndexOf(@"\MalignantTumorSystem.Model"));
            string txtFilePath= Path.Combine(solutionPath, @"MalignantTumorSystem.Model\ClassNameTxt\ClassName.txt");  
            string[] ClassNameList =new string[]{""};
            using(StreamReader reader=new StreamReader(txtFilePath)){
                 string classNameStr=reader.ReadToEnd();
                 int index=classNameStr.LastIndexOf(',');
	             classNameStr=classNameStr.Substring(0,index);
                 ClassNameList= classNameStr.Split(',');
          }
 #>
<#
    if(ClassNameList[0]!=""){
foreach (string className in ClassNameList)
{ 
#>		
	 
            modelBuilder.Configurations.Add(new <#=className#>Map());
<#}
}#>
     }
<#
    if(ClassNameList[0]!=""){
foreach (string className in ClassNameList)
{ 
#>		
	     public DbSet<<#=className#>> <#=className#> { get; set; }
<#}
}#>
   }
}